{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","randomNumber","setRandomNumber","quotes","setQuotes","quote","setQuote","author","setAuthor","nextIndex","setNextIndex","colors","generateRandomNumber","elements","document","getElementsByClassName","Array","from","forEach","element","classList","add","addEventListener","remove","style","opacity","fadingEffect","Math","floor","length","random","useEffect","fetch","then","response","json","data","className","id","class","icon","faQuoteLeft","href","encodeURI","target","rel","faTwitterSquare","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4QAyGeA,MAhGf,WACE,MAAmCC,mBAAS,GAA5C,mBAAKC,EAAL,KAAkBC,EAAlB,KACA,EAAuBF,mBAAS,MAAhC,mBAAKG,EAAL,KAAYC,EAAZ,KACA,EAAqBJ,mBAAS,gFAA9B,mBAAKK,EAAL,KAAWC,EAAX,KACA,EAAuBN,mBAAS,eAAhC,mBAAKO,EAAL,KAAYC,EAAZ,KACA,EAA6BR,mBAAS,GAAtC,mBAAKS,EAAL,KAAeC,EAAf,KACIC,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAqBEC,EAAqB,YAnBR,WAGjB,IAAIC,EAAUC,SAASC,uBAAuB,SAE9CC,MAAMC,KAAKJ,GAAUK,SAAQ,SAAAC,GAC3BA,EAAQC,UAAUC,IAAI,cACxBF,EAAQG,iBAAiB,gBAAe,WACtCH,EAAQC,UAAUG,OAAO,cACzBJ,EAAQK,MAAMC,QAAQ,UAYxBC,GACAxB,EAAgByB,KAAKC,MAAMzB,EAAO0B,OAAOF,KAAKG,WAC9CpB,IAAgBD,EAAYE,EAAOkB,QARnCvB,EAASH,EAAOF,GAAcI,OAC9BG,EAAUL,EAAOF,GAAcM,SA2B/B,OAbFwB,qBAAU,WAERC,MAvDa,0IAwDVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAELhC,EAAUgC,EAAKjC,aAElB,IAMC,qBAAKkC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAab,MAAO,CAAC,gBAAkBb,EAAOF,GAAW,sBAAsB,MAAjG,SACA,sBAAK6B,GAAG,YAAR,UACGnC,GAAS,oBAAGmC,GAAG,OAAOC,MAAM,QAAQf,MAAO,CAAC,MAAQb,EAAOF,GAAW,sBAAsB,MAAnF,UACN,cAAC,IAAD,CAAiB+B,KAAMC,MADjB,KACoDpC,KAE7DF,GAAU,oBAAGmC,GAAG,SAASC,MAAM,QAAQf,MAAO,CAAC,MAAQb,EAAOF,GAAW,sBAAsB,MAArF,gBACUF,KAErB,sBAAK+B,GAAG,UAAR,UACA,mBACEd,MAAO,CAAC,MAAQb,EAAOF,GAAW,sBAAsB,MAAO6B,GAAG,cAClEI,KAAMC,UAAU,4CAAD,OAA6CtC,GAA7C,OAAqDE,IAAWqC,OAAO,SACtFC,IAAI,aAHN,SAII,cAAC,IAAD,CAAiBP,GAAG,aAAaE,KAAMM,QAG1C,wBACCtB,MAAO,CAAC,gBAAkBb,EAAOF,IAAa6B,GAAG,YAAYS,QAAS,WAAKnC,KAD5E,kCC9EMoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5C,SAAS6C,eAAe,SAM1BX,M","file":"static/js/main.8e59870c.chunk.js","sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport './App.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTwitterSquare } from '@fortawesome/free-brands-svg-icons'\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons';\nconst QuoteUrl='https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\n\n\nfunction App() {\n  let [randomNumber,setRandomNumber]=useState(0);\n  let [quotes,setQuotes]=useState(null);\n  let [quote,setQuote]=useState(\" Life isn’t about getting and having, it’s about giving and being.\");\n  let [author,setAuthor]=useState(\"Kevin Kruse\");\n  let [nextIndex,setNextIndex]=useState(0);\n  let colors = [\n    '#16a085',\n    '#27ae60',\n    '#2c3e50',\n    '#f39c12',\n    '#e74c3c',\n    '#9b59b6',\n    '#FB6964',\n    '#342224',\n    '#472E32',\n    '#BDBB99',\n    '#77B1A9',\n    '#73A857'\n  ];\nconst fadingEffect=()=>{\n\n  \n  let elements =document.getElementsByClassName(\"faded\");\n\n  Array.from(elements).forEach(element=>{\n    element.classList.add(\"faded-text\");\n  element.addEventListener(\"animationend\",function(){\n    element.classList.remove(\"faded-text\");\n    element.style.opacity=\"1\";\n  });});\n}\n\nconst getQuoteAndAuthor=()=>{\n\n  setQuote(quotes[randomNumber].quote);\n  setAuthor(quotes[randomNumber].author)\n\n}\nconst generateRandomNumber=()=>{\n\n  fadingEffect();\n  setRandomNumber(Math.floor(quotes.length*Math.random()) );\n  setNextIndex( ++nextIndex % colors.length);\n  getQuoteAndAuthor();\n \n}\n \n  \n \nuseEffect(() => {\n\n  fetch(QuoteUrl)\n    .then((response) => response.json())\n    .then((data) => {\n      \n      setQuotes(data.quotes);\n     });\n}, []);\n\n\n\n \n  return (\n    <div className=\"App\"  >\n      <header className=\"App-header\" style={{\"backgroundColor\":colors[nextIndex],\"transition-duration\":\"1s\"}}>\n      <div id=\"quote-box\">\n        {quotes &&<p id=\"text\" class=\"faded\" style={{\"color\":colors[nextIndex],\"transition-duration\":\"1s\"}} >\n            <FontAwesomeIcon icon={faQuoteLeft}></FontAwesomeIcon>  { quote }</p>}\n    \n        {quotes && <p id=\"author\" class=\"faded\" style={{\"color\":colors[nextIndex],\"transition-duration\":\"1s\"}} >\n                        -  { author}</p>}\n       \n        <div id=\"buttons\"> \n        <a \n          style={{\"color\":colors[nextIndex],\"transition-duration\":\"1s\"}} id=\"tweet-quote\" \n          href={encodeURI(`http://www.twitter.com/intent/tweet?text=${quote}${author}`)} target=\"_blank\" \n          rel=\"noreferrer\"> \n            <FontAwesomeIcon id=\"tweet-icon\" icon={faTwitterSquare}></FontAwesomeIcon> \n        </a>\n\n         <button \n          style={{\"backgroundColor\":colors[nextIndex]}} id=\"new-quote\" onClick={()=>{generateRandomNumber()}}>\n          New Quote\n         </button>\n\n        </div>\n       \n        \n      </div>\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}